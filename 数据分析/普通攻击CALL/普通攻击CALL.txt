1.分析普通攻击CALL，一般来说都是从明文包进行回溯查找。

先在明文包处进行条件段，看堆栈。
调用堆栈：    主线程
地址       堆栈       函数过程 / 参数                       调用来自                      结构
000CE2FC   00A6288F   包含League_o.00ACB910                   League_o.00A6288D             000CE324
000CE328   00658537   League_o.00A627F0                     League_o.00658532             000CE324
000CE32C   00000021     Arg1 = 00000021
000CE330   00FEDAC0     Arg2 = 00FEDAC0
000CE334   00000001     Arg3 = 00000001
000CE338   00000000     Arg4 = 00000000
000CE364   007B86C4   包含League_o.00658537                   League_o.007B86C1             000CE360
000CE37C   00C01A33   League_o.007B8670                     League_o.00C01A2E             000CE3BC
000CE380   000CE440     Arg1 = 000CE440
000CE384   FFFFFFFE     Arg2 = FFFFFFFE
000CE388   0000F85E     Arg3 = 0000F85E
000CE38C   000CE3BC     Arg4 = 000CE3BC
000CE390   00BE1BF7     Arg5 = 00BE1BF7
000CE394   00000014     Arg6 = 00000014
000CE398   000CE3AC     Arg7 = 000CE3AC
000CE3C0   0082806C   League_o.00C019D0                     League_o.00828067             000CE3BC
000CE3C4   000CE440     Arg1 = 000CE440

先来到最外层，下段，发现就是普通攻击call。看堆栈，发现堆栈里面没有数据，这时候跟随ebp，就可以到达外层攻击call。这个call只有在攻击怪物的时候才断下，
不会再A地板的时候断下了。那么这个就是正确的攻击CALL了。来分析下参数：

00958450    8B15 70DAA601   MOV EDX,DWORD PTR DS:[1A6DA70]
00958456    56              PUSH ESI
00958457    8B7424 08       MOV ESI,DWORD PTR SS:[ESP+8]
0095845B    57              PUSH EDI
0095845C    8B46 14         MOV EAX,DWORD PTR DS:[ESI+14]
0095845F    3B42 14         CMP EAX,DWORD PTR DS:[EDX+14]
00958462    75 2D           JNZ SHORT League_o.00958491
00958464    8B4E 18         MOV ECX,DWORD PTR DS:[ESI+18]
00958467    8BC1            MOV EAX,ECX
00958469    C1E8 0C         SHR EAX,0C
0095846C    A8 01           TEST AL,1
0095846E    75 75           JNZ SHORT League_o.009584E5
00958470    C1E9 0D         SHR ECX,0D
00958473    F6C1 01         TEST CL,1
00958476    75 6D           JNZ SHORT League_o.009584E5
00958478    8B06            MOV EAX,DWORD PTR DS:[ESI]
0095847A    8BCE            MOV ECX,ESI
0095847C    FF72 08         PUSH DWORD PTR DS:[EDX+8]
0095847F    8B80 00010000   MOV EAX,DWORD PTR DS:[EAX+100]
00958485    FFD0            CALL EAX
00958487    84C0            TEST AL,AL
00958489    74 5A           JE SHORT League_o.009584E5
0095848B    8B15 70DAA601   MOV EDX,DWORD PTR DS:[1A6DA70]
00958491    FF7424 18       PUSH DWORD PTR SS:[ESP+18]
00958495    A1 3C6AE401     MOV EAX,DWORD PTR DS:[1E46A3C]
0095849A    8BCA            MOV ECX,EDX
0095849C    FF7424 18       PUSH DWORD PTR SS:[ESP+18]
009584A0    FF7424 18       PUSH DWORD PTR SS:[ESP+18]
009584A4    8B78 2C         MOV EDI,DWORD PTR DS:[EAX+2C]
009584A7    8D46 50         LEA EAX,DWORD PTR DS:[ESI+50]
009584AA    56              PUSH ESI
009584AB    50              PUSH EAX
009584AC    6A 03           PUSH 3
009584AE    E8 9DF1ECFF     CALL League_o.00827650                   ; 普通攻击call
009584B3    807C24 14 00    CMP BYTE PTR SS:[ESP+14],0
009584B8    8B4424 1C       MOV EAX,DWORD PTR SS:[ESP+1C]
009584BC    C600 01         MOV BYTE PTR DS:[EAX],1
009584BF    75 24           JNZ SHORT League_o.009584E5
009584C1    807F 1E 00      CMP BYTE PTR DS:[EDI+1E],0
009584C5    74 1E           JE SHORT League_o.009584E5
009584C7    8B56 18         MOV EDX,DWORD PTR DS:[ESI+18]
009584CA    8BC2            MOV EAX,EDX
009584CC    C1E8 0C         SHR EAX,0C
009584CF    A8 01           TEST AL,1
009584D1    75 08           JNZ SHORT League_o.009584DB
009584D3    C1EA 0D         SHR EDX,0D
009584D6    F6C2 01         TEST DL,1
009584D9    74 0A           JE SHORT League_o.009584E5
009584DB    FF76 08         PUSH DWORD PTR DS:[ESI+8]
009584DE    8BCF            MOV ECX,EDI
009584E0    E8 1BC2E9FF     CALL League_o.007F4700
009584E5    5F              POP EDI
009584E6    5E              POP ESI
009584E7    C2 1400         RETN 14

$ ==>    > 00000003
$+4      > 4CC4CF88
$+8      > 4CC4CF38
$+C      > 4000001D
$+10     > 45160998
$+14     > 00000001


$ ==>    > 00000003  |Arg1 = 00000003
$+4      > 4C690B90  |Arg2 = 4C690B90
$+8      > 4C690B40  |Arg3 = 4C690B40
$+C      > 00000000  |Arg4 = 00000000
$+10     > 00000000  |Arg5 = 00000000
$+14     > 00000001  \Arg6 = 00000001

发现一共有6个参数

攻击call为
__asm
{
pushad
push 1;
push 0;
push 0;
push 怪物对象;
push 怪物坐标;
push 3;
MOV EDX,DWORD PTR DS:[1A6DA70]
MOV ECX,EDX
call 00827650;
popad;

}